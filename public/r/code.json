{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "code",
  "type": "registry:component",
  "files": [
    {
      "path": "src/components/ui/code.tsx",
      "content": "import { useEffect, useState } from \"react\";\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from \"@/components/ui/tabs\";\nimport { ClipboardIcon } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"./button\";\n\nexport function Code({ code, initialKey, className, ...props }: { code: string | { [key: string]: string }, initialKey?: string, className?: string } & React.ComponentProps<typeof Tabs>) {\n  const [tab, setTab] = useState(initialKey || (typeof code !== \"string\" ? Object.keys(code)[0] : \"\"));\n  const [copied, setCopied] = useState(false);\n\n  useEffect(() => {\n    if (initialKey) {\n      setTab(initialKey);\n    }\n  }, [initialKey]);\n\n  const tabLabels = typeof code === \"string\" ? [] : Object.keys(code);\n\n  const handleCopy = async () => {\n    const text = typeof code === \"string\" ? code : code[tab as keyof typeof code];\n    await navigator.clipboard.writeText(text);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1200);\n  };\n\n  return (\n    <Tabs className={className} defaultValue={tab} onValueChange={setTab} {...props}>\n      <div className=\"flex items-center justify-between px-4 pt-3 pb-2\">\n        <TabsList className=\"bg-transparent p-0 gap-1 h-auto\">\n          {tabLabels.map((key) => (\n            <TabsTrigger\n              key={key}\n              value={key}\n              onClick={() => setTab(key)}\n              className=\"cursor-pointer\"\n            >\n              {key}\n            </TabsTrigger>\n          ))}\n        </TabsList>\n      </div>\n      <TabsContent value={tab} className=\"px-4 pb-4 flex gap-2 items-center justify-between\">\n        <pre\n          className=\"font-mono text-[15px] leading-6 whitespace-pre-wrap break-words select-all text-foreground\"\n        >\n          <code>{typeof code === \"string\" ? code : code[tab as keyof typeof code]}</code>\n        </pre>\n        <Button\n          onClick={handleCopy}\n          variant=\"outline\"\n          size=\"icon\"\n          className={cn(\n            \"ml-2 cursor-pointer\",\n            copied && \"text-green-500 hover:text-green-500\"\n          )}\n          aria-label=\"Copy command\"\n        >\n          <ClipboardIcon className=\"w-5 h-5\" />\n        </Button>\n      </TabsContent>\n    </Tabs>\n  );\n} ",
      "type": "registry:component"
    }
  ]
}